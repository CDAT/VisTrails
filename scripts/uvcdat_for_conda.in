#!/bin/bash

# Used in event of -o "log_location"; grabs the next arg and puts it in target
capture=false
# The location we'll be logging to
target="$HOME/.uvcdat/uvcdatsession.log"
# Whether or not we're redirecting the stdout/stderr
redirect=true

for var in "$@"
do
    if [ $capture = true ]; then
        # -o was found, grabbing the next value
        target=$var
        if [ "$target" = "" ]; then
            # This is the way we can redirect output to stdout
            # Do not redirect output
            redirect=false
        fi
        # Don't need to capture anything else
        capture=false
        continue
    fi

    case $var in
        # Trigger above block on the next arg
    -o) capture=true;
            ;;
                # Parse the target out of the = section
    --output=*) target=`sed "s/--output=\(.*\)/\1/" <<< $var`
        if [ "$target" = "" ]; then
            # Do not redirect output
            redirect=false
        fi
            ;;
                  # Do not redirect output
    --output-std) redirect=false
            ;;
            # Shouldn't redirect for help
    --help) redirect=false
            ;;
    *)      ;;
    esac
done

if [ $redirect = false ]  ;then
    python "CONDAPREFIX/vistrails/vistrails/uvcdat.py" "$@"
else
    # Replace all uses of ~ with $HOME
    target="${target/#\~/$HOME}"

    # Check if path exists
    target_dir="$(dirname $target)"
    if [ ! -d "$target_dir" ] ;then
        mkdir -p $target_dir
    fi

    # Make sure the file exists and that we have write privileges
    touch $target
    # Launch with redirection
    python "CONDAPREFIX/vistrails/vistrails/uvcdat.py" "$@" >>$target 2>&1
fi
